#!/usr/bin/env python
#
# ppyaml - Pretty-print YAML
#
#
#    Copyright Â© 2014  Wil Cooley <wcooley&#64;nakedape.cc>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import argparse
import json
import pprint
import sys
import yaml

format_as = {
    'python':   pprint.pformat,
    'json':     json.dumps,
    'yaml':     yaml.safe_dump,
}

# This seemed like a good idea but the XML generated by dicttoxml is broken if
# specialy characters such ':' are included, which is no unusual when using it
# on YAML written for Hiera. Maybe if/when this issue is fixed:
#   https://github.com/quandyfactory/dicttoxml/issues/10
# At any rate, it shows how other formats can be added.
try:
    from dicttoxml import dicttoxml
    from xml.dom.minidom import parseString
    def xml_dump(data, indent):
        xml_str = dicttoxml(data)
        print xml_str
        dom = parseString(xml_str)
        return dom.toprettyxml(indent=' ' * indent)
    format_as['xml'] = xml_dump
except ImportError:
    pass

if __name__ == '__main__':

    parser = argparse.ArgumentParser(
            description='Parse YAML and pretty-print in alternative formats.')
    parser.add_argument('--format', '-f', metavar='FORMAT',
            action='append', choices=format_as.keys(),
            help='Output format FORMAT (choices: %(choices)s)')
    parser.add_argument('yaml_file', nargs='*', type=argparse.FileType('r'),
            default=[sys.stdin], help='Input files (default: stdin)')
    args = parser.parse_args()

    if not args.format: args.format = ['python']

    for infile in args.yaml_file:
        yamlin = yaml.load(infile)
        for fmt in args.format:
            print 'FORMAT: {0}'.format(fmt)
            print format_as[fmt](yamlin, indent=4)
            print 

